const mongoose = require('mongoose');
require('dotenv').config();

// Import models
const Contact = require('../src/models/Contact');
const connectDB = require('../src/config/database');

// Sample contact data with realistic Arabic content
const sampleContacts = [
    {
        name: "ุฃุญูุฏ ูุญูุฏ ุงูุนูู",
        email: "ahmed.ali@example.com",
        phone: "+966501234567",
        subject: "ุงุณุชูุณุงุฑ ุนู ุชุทููุฑ ูููุน ุฅููุชุฑููู",
        message: "ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชูุ ุฃุชููู ุฃู ุชููููุง ุจุฎูุฑ. ุฃุฑูุฏ ุงูุงุณุชูุณุงุฑ ุนู ุชุทููุฑ ูููุน ุฅููุชุฑููู ูุดุฑูุชู ุงููุงุดุฆุฉ ูู ูุฌุงู ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ. ูุญุชุงุฌ ุฅูู ูููุน ุงุญุชุฑุงูู ูุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ ููุธุงู ุฏูุน ุขูู. ูู ูููููู ุชุฒููุฏู ุจุนุฑุถ ุณุนุฑ ูุจุฏุฆู ููุฏุฉ ุงูุชูููุฐ ุงููุชููุนุฉุ",
        status: "new",
        priority: "high",
        isRead: false
    },
    {
        name: "ูุงุทูุฉ ุณุงูู ุงูุฒูุฑุงูู",
        email: "fatima.alzahrani@gmail.com",
        phone: "+966556789123",
        subject: "ุทูุจ ุชุทููุฑ ุชุทุจูู ุฌูุงู",
        message: "ูุฑุญุจุงูุ ุฃุนูู ูู ูุฌุงู ุงูุชุนููู ูุฃุฑูุฏ ุชุทููุฑ ุชุทุจูู ุฌูุงู ุชุนูููู ููุฃุทูุงู. ุงูุชุทุจูู ูุฌุจ ุฃู ูููู ุชูุงุนููุงู ููุฏุนู ุงูุฃูุนุงุจ ุงูุชุนููููุฉ. ูุฏู ููุฑุฉ ูุงุถุญุฉ ุนู ุงููุญุชูู ูุงูุชุตููู ุงููุทููุจ. ุฃุฑุฌู ุงูุชูุงุตู ูุนู ูููุงูุดุฉ ุงูุชูุงุตูู ูุงูุชูููุฉ.",
        status: "read",
        priority: "medium",
        isRead: true
    },
    {
        name: "ุนุจุฏุงูุฑุญูู ุฎุงูุฏ ุงููุญุทุงูู",
        email: "abdulrahman.k@company.com",
        phone: "+966543219876",
        subject: "ูุธุงู ุฅุฏุงุฑุฉ ุดุฑูุฉ",
        message: "ูุญู ุดุฑูุฉ ูุชูุณุทุฉ ุงูุญุฌู ูุจุญุซ ุนู ูุธุงู ุฅุฏุงุฑุฉ ุดุงูู ูุดูู ุฅุฏุงุฑุฉ ุงูููุธูููุ ุงููุฎุฒููุ ูุงููุญุงุณุจุฉ. ุงููุธุงู ูุฌุจ ุฃู ูููู ูุงุจู ููุชุฎุตูุต ููุฏุนู ุงูุชูุงุฑูุฑ ุงููุงููุฉ ุงูููุตูุฉ. ููุถู ุฃู ูููู ุงููุธุงู ุณุญุงุจูุงู ูุน ุฅููุงููุฉ ุงููุตูู ูู ุงููุงุชู ุงููุญููู.",
        status: "replied",
        priority: "high",
        isRead: true,
        notes: "ุชู ุฅุฑุณุงู ุนุฑุถ ุณุนุฑ ููุตู ูุญุฌุฒ ููุนุฏ ูููุงุก"
    },
    {
        name: "ููุฑุง ุนุจุฏุงููู ุงูุญุฑุจู",
        email: "nora.alharbi@edu.sa",
        phone: "+966598765432",
        subject: "ูููุน ุฅููุชุฑููู ุชุนูููู",
        message: "ุฃุนูู ูู ุฅุญุฏู ุงูุฌุงูุนุงุช ูุฃุญุชุงุฌ ุฅูู ุชุทููุฑ ููุตุฉ ุชุนูู ุฅููุชุฑููู ููุทูุงุจ. ุงูููุตุฉ ูุฌุจ ุฃู ุชุฏุนู ุงููุตูู ุงูุงูุชุฑุงุถูุฉุ ุฑูุน ุงููุงุฌุจุงุชุ ูุงูุงุฎุชุจุงุฑุงุช ุงูุฅููุชุฑูููุฉ. ูุฏููุง ููุฒุงููุฉ ูุญุฏุฏุฉ ููุฑูุฏ ุงูุจุฏุก ูู ุฃูุฑุจ ููุช ูููู.",
        status: "new",
        priority: "medium",
        isRead: false
    },
    {
        name: "ูุญูุฏ ุตุงูุญ ุงูุนุชูุจู",
        email: "m.alotaibi@business.com",
        phone: "+966512345678",
        subject: "ุชุทุจูู ุฅุฏุงุฑุฉ ุงููุฎุฒูู",
        message: "ูุฏููุง ูุฎุงุฒู ูุชุนุฏุฏุฉ ููุญุชุงุฌ ุฅูู ุชุทุจูู ูุฅุฏุงุฑุฉ ุงููุฎุฒูู ูุฏุนู ุงูุจุงุฑููุฏ ูุชุชุจุน ุงูููุชุฌุงุช. ุงูุชุทุจูู ูุฌุจ ุฃู ูุนูู ุนูู ุงูุฃุฌูุฒุฉ ุงูููุญูุฉ ููุชุฒุงูู ูุน ุงููุธุงู ุงููุญุงุณุจู ุงูุญุงูู. ูู ูุฏููู ุฎุจุฑุฉ ูู ูุฐุง ุงููุฌุงูุ",
        status: "read",
        priority: "medium",
        isRead: true
    },
    {
        name: "ุณุงุฑุฉ ุฃุญูุฏ ุงูุดูุฑู",
        email: "sara.alshahri@clinic.com",
        phone: "+966587654321",
        subject: "ูุธุงู ุฅุฏุงุฑุฉ ุนูุงุฏุฉ ุทุจูุฉ",
        message: "ุฃุฏูุฑ ุนูุงุฏุฉ ุทุจูุฉ ูุชุฎุตุตุฉ ูุฃุฑูุฏ ูุธุงู ุฅุฏุงุฑุฉ ุดุงูู ูุดูู ุญุฌุฒ ุงูููุงุนูุฏุ ุงููููุงุช ุงูุทุจูุฉุ ูุงูููุชุฑุฉ. ุงููุธุงู ูุฌุจ ุฃู ูููู ุขููุงู ููุชูุงููุงู ูุน ูุนุงููุฑ ุงูุฎุตูุตูุฉ ุงูุทุจูุฉ ูู ุงูููููุฉ. ุฃุฑุฌู ุฅุฑุณุงู ูุนูููุงุช ุนู ุฎุฏูุงุชูู.",
        status: "new",
        priority: "low",
        isRead: false
    },
    {
        name: "ุฎุงูุฏ ุนูุฑ ุงูุจููู",
        email: "khalid.albaqami@restaurant.com",
        phone: "+966523456789",
        subject: "ุชุทุจูู ุชูุตูู ุทุนุงู",
        message: "ุฃููู ุณูุณูุฉ ูุทุงุนู ูุฃุฑูุฏ ุชุทุจูู ุชูุตูู ุทุนุงู ูุน ูุธุงู ุชุชุจุน ุงูุทูุจุงุช ูุฏูุน ุฅููุชุฑููู. ุงูุชุทุจูู ูุฌุจ ุฃู ูุฏุนู ุนุฏุฉ ูุทุงุนู ููููู ุณูู ุงูุงุณุชุฎุฏุงู ููุนููุงุก ูุณุงุฆูู ุงูุชูุตูู. ูุง ูู ุงูููุฒุงุช ุงูุชู ูููููู ุชูุฏูููุงุ",
        status: "replied",
        priority: "high",
        isRead: true,
        notes: "ุนููู ููุชูุ ุชู ุฅุฑุณุงู ุนุฑุถ ููู ููุตู ูุนููุงุช ูู ุงูุชุทุจููุงุช ุงูุณุงุจูุฉ"
    },
    {
        name: "ุฑูู ุณุนุฏ ุงูุฏูุณุฑู",
        email: "reem.aldosari@fashion.com",
        phone: "+966534567890",
        subject: "ูุชุฌุฑ ุฅููุชุฑููู ููุฃุฒูุงุก",
        message: "ุฃุนูู ูู ูุฌุงู ุงูุฃุฒูุงุก ูุฃุฑูุฏ ุฅูุดุงุก ูุชุฌุฑ ุฅููุชุฑููู ุงุญุชุฑุงูู ูุนุฑุถ ุงูููุชุฌุงุช ุจุดูู ุฌููู ููุฏุนู ุงูุฏูุน ุงูุขูู. ุงููุชุฌุฑ ูุฌุจ ุฃู ูููู ูุชุฌุงูุจุงู ูุน ุงูููุงุชู ุงูุฐููุฉ ููุฏุนู ุฅุฏุงุฑุฉ ุงููุฎุฒูู ูุงูุทูุจุงุช. ูู ุชุณุชุบุฑู ุนูููุฉ ุงูุชุทููุฑุ",
        status: "new",
        priority: "medium",
        isRead: false
    },
    {
        name: "ุนุจุฏุงูุนุฒูุฒ ููุฏ ุงูุฑุงุดุฏ",
        email: "abdulaziz.alrashed@construction.com",
        phone: "+966545678901",
        subject: "ูุธุงู ุฅุฏุงุฑุฉ ูุดุงุฑูุน ุงูุจูุงุก",
        message: "ุดุฑูุชูุง ูุชุฎุตุตุฉ ูู ุงูููุงููุงุช ูุงูุจูุงุก. ูุญุชุงุฌ ุฅูู ูุธุงู ุฅุฏุงุฑุฉ ูุดุงุฑูุน ูุชุชุจุน ุงูุชูุฏูุ ุงูุชูุงูููุ ูุงูููุงุฏ. ุงููุธุงู ูุฌุจ ุฃู ูุฏุนู ุงูุชูุงุฑูุฑ ุงููุงููุฉ ูุงูุฌุฏููุฉ ุงูุฒูููุฉ. ูู ูููููู ุชุทููุฑ ูุธุงู ูุฎุตุต ูุงุญุชูุงุฌุงุชูุงุ",
        status: "read",
        priority: "medium",
        isRead: true
    },
    {
        name: "ููุฏ ูุงุตุฑ ุงูุบุงูุฏู",
        email: "hind.alghamdi@beauty.com",
        phone: "+966556789012",
        subject: "ุชุทุจูู ุญุฌุฒ ููุงุนูุฏ ุตุงููู",
        message: "ุฃููู ุตุงููู ุชุฌููู ูุฃุฑูุฏ ุชุทุจูู ูููู ุงูุนููุงุก ูู ุญุฌุฒ ุงูููุงุนูุฏ ููุดุงูุฏุฉ ุงูุฎุฏูุงุช ุงููุชุงุญุฉ. ุงูุชุทุจูู ูุฌุจ ุฃู ูุฑุณู ุชุฐููุฑุงุช ูููุธู ุฌุฏูู ุงูุนูู. ุฃูุถู ุฃู ูููู ุงูุชุทุจูู ุจุณูุทุงู ูุณูู ุงูุงุณุชุฎุฏุงู. ูุง ูู ุงูุชูููุฉ ุงููุชููุนุฉุ",
        status: "archived",
        priority: "low",
        isRead: true,
        notes: "ุนููู ุฃูุบู ุงููุดุฑูุน ูุฃุณุจุงุจ ูุงููุฉ"
    }
];

async function seedContacts() {
    try {
        console.log('๐ง ุจุฏุก ุฅุถุงูุฉ ุจูุงูุงุช ุฑุณุงุฆู ุงูุชูุงุตู ุงูุชุฌุฑูุจูุฉ...');

        // Connect to database
        await connectDB();
        console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');

        // Clear existing contacts (optional)
        await Contact.deleteMany({});
        console.log('๐๏ธ ุชู ุญุฐู ุงูุฑุณุงุฆู ุงูููุฌูุฏุฉ');

        // Insert sample contacts with random dates
        const contactsWithDates = sampleContacts.map((contact, index) => {
            // Create dates spread over the last 30 days
            const daysAgo = Math.floor(Math.random() * 30);
            const createdAt = new Date(Date.now() - (daysAgo * 24 * 60 * 60 * 1000));

            return {
                ...contact,
                createdAt,
                updatedAt: contact.status === 'new' ? createdAt : new Date(createdAt.getTime() + Math.random() * 24 * 60 * 60 * 1000)
            };
        });

        const insertedContacts = await Contact.insertMany(contactsWithDates);
        console.log(`โ ุชู ุฅุถุงูุฉ ${insertedContacts.length} ุฑุณุงูุฉ ุจูุฌุงุญ`);

        // Display summary
        console.log('\n๐ ููุฎุต ุงูุฑุณุงุฆู ุงููุถุงูุฉ:');

        const statusSummary = await Contact.aggregate([
            {
                $group: {
                    _id: '$status',
                    count: { $sum: 1 }
                }
            }
        ]);

        statusSummary.forEach(status => {
            const statusName = {
                new: 'ุฌุฏูุฏุฉ',
                read: 'ููุฑูุกุฉ',
                replied: 'ุชู ุงูุฑุฏ',
                archived: 'ูุคุฑุดูุฉ'
            };
            console.log(`   ${statusName[status._id]}: ${status.count} ุฑุณุงูุฉ`);
        });

        const prioritySummary = await Contact.aggregate([
            {
                $group: {
                    _id: '$priority',
                    count: { $sum: 1 }
                }
            }
        ]);

        console.log('\nโญ ุญุณุจ ุงูุฃููููุฉ:');
        prioritySummary.forEach(priority => {
            const priorityName = {
                low: 'ููุฎูุถุฉ',
                medium: 'ูุชูุณุทุฉ',
                high: 'ุนุงููุฉ'
            };
            console.log(`   ${priorityName[priority._id]}: ${priority.count} ุฑุณุงูุฉ`);
        });

        const unreadCount = await Contact.countDocuments({ isRead: false });
        console.log(`\n๐ฌ ุงูุฑุณุงุฆู ุบูุฑ ุงูููุฑูุกุฉ: ${unreadCount} ุฑุณุงูุฉ`);

        console.log('\n๐ ุชู ุฅูุฌุงุฒ ุนูููุฉ ุฅุถุงูุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!');
        console.log('\n๐ก ููููู ุงูุขู:');
        console.log('   1. ุงุฎุชุจุงุฑ API ููุฑุณุงุฆู ูู Postman');
        console.log('   2. ุนุฑุถ ุงูุฑุณุงุฆู ูู ููุญุฉ ุงูุชุญูู');
        console.log('   3. ุงุฎุชุจุงุฑ ุงูุจุญุซ ูุงูุชุตููุฉ');
        console.log('   4. ุงุฎุชุจุงุฑ ุชุญุฏูุซ ุญุงูุฉ ุงูุฑุณุงุฆู');

    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงูุจูุงูุงุช:', error);
    } finally {
        // Close database connection
        await mongoose.connection.close();
        console.log('๐ ุชู ูุทุน ุงูุงุชุตุงู ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช');
        process.exit(0);
    }
}

// Handle command line arguments
const args = process.argv.slice(2);
if (args.includes('--help') || args.includes('-h')) {
    console.log(`
๐ง ุฃุฏุงุฉ ุฅุถุงูุฉ ุจูุงูุงุช ุฑุณุงุฆู ุงูุชูุงุตู ุงูุชุฌุฑูุจูุฉ

ุงูุงุณุชุฎุฏุงู:
  node scripts/seedContacts.js [ุฎูุงุฑุงุช]

ุงูุฎูุงุฑุงุช:
  --keep-existing    ุงูุงุญุชูุงุธ ุจุงูุฑุณุงุฆู ุงูููุฌูุฏุฉ
  --help, -h         ุนุฑุถ ูุฐู ุงูุฑุณุงูุฉ

ุฃูุซูุฉ:
  node scripts/seedContacts.js
  node scripts/seedContacts.js --keep-existing
`);
    process.exit(0);
}

// Check if we should keep existing data
if (args.includes('--keep-existing')) {
    console.log('โน๏ธ ุณูุชู ุงูุงุญุชูุงุธ ุจุงูุฑุณุงุฆู ุงูููุฌูุฏุฉ');
    // Override the function to not delete existing contacts
    const originalSeedContacts = seedContacts;
    seedContacts = async function () {
        try {
            console.log('๐ง ุจุฏุก ุฅุถุงูุฉ ุจูุงูุงุช ุฑุณุงุฆู ุงูุชูุงุตู ุงูุชุฌุฑูุจูุฉ...');

            await connectDB();
            console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
            console.log('โน๏ธ ุชู ุชุฎุทู ุญุฐู ุงูุฑุณุงุฆู ุงูููุฌูุฏุฉ');

            const contactsWithDates = sampleContacts.map((contact, index) => {
                const daysAgo = Math.floor(Math.random() * 30);
                const createdAt = new Date(Date.now() - (daysAgo * 24 * 60 * 60 * 1000));

                return {
                    ...contact,
                    createdAt,
                    updatedAt: contact.status === 'new' ? createdAt : new Date(createdAt.getTime() + Math.random() * 24 * 60 * 60 * 1000)
                };
            });

            const insertedContacts = await Contact.insertMany(contactsWithDates);
            console.log(`โ ุชู ุฅุถุงูุฉ ${insertedContacts.length} ุฑุณุงูุฉ ุจูุฌุงุญ`);

            const totalContacts = await Contact.countDocuments();
            console.log(`๐ ุฅุฌูุงูู ุงูุฑุณุงุฆู ูู ุงููุธุงู: ${totalContacts}`);

            console.log('\n๐ ุชู ุฅูุฌุงุฒ ุนูููุฉ ุฅุถุงูุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!');

        } catch (error) {
            console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงูุจูุงูุงุช:', error);
        } finally {
            await mongoose.connection.close();
            console.log('๐ ุชู ูุทุน ุงูุงุชุตุงู ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช');
            process.exit(0);
        }
    };
}

// Run the seeding function
seedContacts(); 